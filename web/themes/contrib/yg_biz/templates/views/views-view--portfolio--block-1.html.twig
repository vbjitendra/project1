{#
/**
 * @file
 * Default theme implementation for a single field in a view.
 *
 * Available variables:
 * - view: The view that the field belongs to.
 * - field: The field handler that can process the input.
 * - row: The raw result of the database query that generated this field.
 * - output: The processed output that will normally be used.
 *
 * When fetching output from the row this construct should be used:
 * data = row[field.field_alias]
 *
 * The above will guarantee that you'll always get the correct data, regardless
 * of any changes in the aliasing that might happen if the view is modified.
 *
 * @see template_preprocess_views_view_field()
 *
 * @ingroup themeable
 */
#}

<section id="portfolio" class="text-center">
  <div class="container">
    <h2>Our <span>Portfolio</span></h2>
      <p>Tempor incididunt ut labore et dolore</p>
    <div class="row">
     {% for result in view.result %}
      <div class="col-md-4  col-sm-12 col-xs-12 categories">
        <div class="portfolio-item wow fadeInUp">
          <a href="{{ file_url(view.field.uri.value(view.result[loop.index-1])) }}" 
           class="portfolio-popup">
            <img src="{{ file_url(view.field.uri.value(view.result[loop.index-1])) }}"
             alt="{{ view.field.title.value(view.result[loop.index-1]) }}">
            <div class="portfolio-overlay">
              <div class="portfolio-info middle"><p class="wow fadeInUp">
                <h4>{{ view.field.title.value(view.result[loop.index-1]) }}</h4>
                <p>{{ view.field.field_client_name.value(view.result[loop.index-1]) }}</p>
                <p>{{ view.field.body.value(view.result[loop.index-1]) |striptags }}</p>
              </div>
            </div>
          </a>
        </div>
      </div>
      {% endfor %}
    </div>
    <a href="/portfolio" class="btn btn-infos">Load More</a>
  </div>    
</section>  