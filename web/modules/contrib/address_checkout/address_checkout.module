<?php

/**
 * @file
 * Contains address_checkout.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\RedirectCommand;
use Drupal\commerce_checkout\Plugin\Commerce\CheckoutFlow\MultistepDefault;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\OpenModalDialogCommand;

/**
 * Implements hook_help().
 */
function address_checkout_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the address_checkout module.
    case 'help.page.address_checkout':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('provide list of addresses during checkout') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function address_checkout_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if the form builder implements the AddToCartFormInterface.
  if ($form_state->getBuildInfo()['callback_object'] instanceof MultistepDefault) {
    $stepsIds = $form_state->getBuildInfo()['callback_object']->getVisibleSteps();
    // Using getInstanace method to create Object.
    $container = Drupal::getContainer();
    $object = $container->get('address.checkout');
    if ($stepsIds && $object->getCurrentStep($stepsIds, $form['#step_id']) == 'order_information') {
      $object->ajaxGetAddress($form_id, $form, $form_state);
    }
  }
}

/**
 * Ajax callback function.
 *
 * @param array $form
 *   Form array.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   Form State.
 *
 * @return Drupal\Core\Ajax\AjaxResponse
 *   Ajax response
 */
function address_checkout_callback(array &$form, FormStateInterface &$form_state) {
  $container = Drupal::getContainer();
  $object = $container->get('address.checkout');
  $current_path = $object->getCurrentPath();
  $id = $form_state->getValue('address_list');
  $option = [];
  if (!empty($id)) {
    $option = [
      'query' => ['id' => $id],
    ];
  }
  $url = Url::fromUri('internal:' . $current_path, $option);
  $response = new AjaxResponse();
  $message = t('updating address...');
  // Adding modal window.
  $options = [
    'width' => 250,
    'height' => 300,
  ];
  $title = t('Address Updation.');
  $response->addCommand(new OpenModalDialogCommand($title, $message, $options));
  $response->addCommand(new RedirectCommand($url->toString()));
  return $response;
}
